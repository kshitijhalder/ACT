tkinter
File_Methods
time\n",
date,
Keyword_Occ
choice\n",
keras.preprocessing.image
sklearn.neural_network
tensorflow.keras
argrelextrema\n",
keras.utils
os
scipy.signal
sys
sklearn.metrics\n",
sklearn.datasets
shutil\n",
os\\nprint(os.getcwd())',
train_test_split\n",
joblib
tensorflow
datasets,
sklearn.tree
train_test_split,
time,
Dense\n",
StandardScaler
scipy
KNeighborsClassifier\n",
PySide6.QtCore
einsteinpy.metric
SVC\n",
numpy
datetime
getpass\n",
PySide6.QtWidgets
QtWidgets
RicciTensor,
name
reload
joblib\n",
calendar\n",
Dropout\n",
SVC
\*',
keras\n",
PySide6.QtGui
pandas
tensorflow.keras.models
constants\n",
Conv2D\n",
qrcode
random
(\S+)
LabelEncoder
Acc_Creation
ImageDataGenerator\n"
os\n",
statistics\n",
sklearn.linear_model
stats\n",
imp
datetime\n",
Axes3D
pickle
KNeighborsClassifier
DecisionTreeClassifier\n",
LabelEncoder\n",
*\n",
sklearn.cluster
KMeans\n",
calendar,
train_test_split
files\n",
emojize\n",
einsteinpy.symbolic
scipy.constants
seaborn
sklearn.svm
confusion_matrix,
random\n",
getpass
RandomForestClassifier\n",
RandomForestClassifier
folium\n",
sklearn.neighbors
json\n",
re
keyword
MaxPooling2D\n",
emoji
matplotlib.pyplot
scipy.stats
Sequential\n",
MLPClassifier\n",
Axes3D\n",
cv2\n",
ImageDataGenerator\n",
sys\n",
functools\n",
PySide6
turtle\n",
*
LogisticRegression
math\n",
Flatten\n",
mpl_toolkits.mplot3d
sklearn.metrics
re\n",
collections
sklearn.model_selection
sklearn.ensemble
re,
MLPRegressor\n",
StandardScaler\n",
data
sklearn.preprocessing
argrelextrema
os.path\n",
load_iris\n",
os,
google.colab
keras"
Counter\n",
tensorflow.keras.layers
Schwarzschild\n",
