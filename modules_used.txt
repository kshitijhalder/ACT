KNeighborsClassifier\n",
Axes3D
sklearn.cluster
KMeans\n",
scipy.constants
getpass\n",
SVC
numpy
datetime
getpass
einsteinpy.symbolic
sys\n",
pickle
SVC\n",
sklearn.neighbors
(\S+)
matplotlib.pyplot
re\n",
sklearn.metrics\n",
Counter\n",
sklearn.preprocessing
sys
tensorflow
train_test_split
RicciTensor,
random\n",
LabelEncoder
LabelEncoder\n",
pandas
date,
MLPRegressor\n",
sklearn.svm
MLPClassifier\n",
emojize\n",
qrcode
joblib\n",
einsteinpy.metric
Schwarzschild\n",
PySide6
PySide6.QtGui
DecisionTreeClassifier\n",
collections
mpl_toolkits.mplot3d
seaborn
scipy
confusion_matrix,
os\\nprint(os.getcwd())',
sklearn.model_selection
PySide6.QtCore
calendar,
re,
*
joblib
random
choice\n",
sklearn.datasets
math\n",
re
Keyword_Occ
QtWidgets
datetime\n",
train_test_split\n",
LogisticRegression
PySide6.QtWidgets
load_iris\n",
reload
train_test_split,
sklearn.linear_model
Axes3D\n",
constants\n",
StandardScaler
stats\n",
turtle\n",
data
KNeighborsClassifier
calendar\n",
StandardScaler\n",
sklearn.neural_network
datasets,
RandomForestClassifier
\*',
time\n",
emoji
statistics\n",
sklearn.tree
sklearn.metrics
imp
os,
tensorflow.keras
scipy.stats
sklearn.ensemble
os
File_Methods
*\n",
keyword
functools\n",
name
Acc_Creation
RandomForestClassifier\n",
time,
os\n",
